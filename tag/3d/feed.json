{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodeVortex记事本 • All posts by \"3d\" tag",
    "description": "滴答滴答滴答",
    "home_page_url": "https://zhang3399.github.io",
    "items": [
        {
            "id": "https://zhang3399.github.io/2025/07/12/Open3D/2025-7-12-Open3D/",
            "url": "https://zhang3399.github.io/2025/07/12/Open3D/2025-7-12-Open3D/",
            "title": "Open3D",
            "date_published": "2025-07-12T02:00:00.000Z",
            "content_html": "<h1 id=\"3d文件\"><a class=\"markdownIt-Anchor\" href=\"#3d文件\">#</a> 3D 文件</h1>\n<h2 id=\"点云文件\"><a class=\"markdownIt-Anchor\" href=\"#点云文件\">#</a> 点云文件</h2>\n<blockquote>\n<p>点云文件是一种用于存储点云数据的文件格式。通常包括点云的坐标、颜色等信息。</p>\n</blockquote>\n<p>默认情况下，Open3D 支持以下点云文件格式：</p>\n<table>\n<thead>\n<tr>\n<th>Format</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>xyz</code></td>\n<td>纯文本格式，每行包含一个点的坐标（x, y, z）</td>\n</tr>\n<tr>\n<td><code>xyzn</code></td>\n<td>纯文本格式，每行包含一个点的坐标（x, y, z）和法线（nx, ny, nz）</td>\n</tr>\n<tr>\n<td><code>xyzrgb</code></td>\n<td>纯文本格式，每行包含一个点的坐标（x, y, z）和颜色（r, g, b）</td>\n</tr>\n<tr>\n<td><code>pcd</code></td>\n<td>PCD 文件格式，由 PCL（Point Cloud Library）定义</td>\n</tr>\n<tr>\n<td><code>ply</code></td>\n<td>PLY 文件格式，由 PLY（Polygon File Format）定义</td>\n</tr>\n<tr>\n<td><code>obj</code></td>\n<td>OBJ 文件格式，由 3D 建模软件定义</td>\n</tr>\n</tbody>\n</table>\n<p><code>o3d.io.read_point_cloud(pcd,format)</code>  函数未指定 <code>format</code>  参数时，Open3D 会根据文件扩展名自动推断文件格式。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 读取点云文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_to_point_cloud_file.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 显示点云</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pcd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><strong>代码直接构造点云数据</strong></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 定义点坐标</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>vertices <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 点 0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 点 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 点 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 点 3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 创建点云对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>PointCloud<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pcd<span class=\"token punctuation\">.</span>points <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">.</span>Vector3dVector<span class=\"token punctuation\">(</span>vertices<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pcd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> window_name<span class=\"token operator\">=</span><span class=\"token string\">\"直接构造的点云\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"网格文件\"><a class=\"markdownIt-Anchor\" href=\"#网格文件\">#</a> 网格文件</h2>\n<blockquote>\n<p>网格文件是一种用于存储三维网格数据的文件格式。通常包含多边形、顶点、法线、纹理等信息。</p>\n</blockquote>\n<p>默认情况下，Open3D 支持以下网格文件格式：</p>\n<table>\n<thead>\n<tr>\n<th>文件后缀</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ply</code></td>\n<td>PLY 文件格式，由 PLY（Polygon File Format）定义</td>\n</tr>\n<tr>\n<td><code>obj</code></td>\n<td>OBJ 文件格式，由 3D 建模软件定义</td>\n</tr>\n<tr>\n<td><code>stl</code></td>\n<td>STL 文件格式，由 STL（Stereolithography）定义</td>\n</tr>\n<tr>\n<td><code>off</code></td>\n<td>OFF 文件格式，由 OFF（Object File Format）定义</td>\n</tr>\n</tbody>\n</table>\n<p><code>o3d.io.read_triangle_mesh(mesh,format)</code>  函数未指定 <code>format</code>  参数时，Open3D 会根据文件扩展名自动推断文件格式。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 读取网格文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mesh <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_triangle_mesh<span class=\"token punctuation\">(</span><span class=\"token string\">\"path_to_mesh_file.ply\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 显示网格</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>mesh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><strong>代码直接构造点网格数据</strong><br>\n注意： 网络数据定义面时，（右手定则）大拇指为面的法线方向，即可视化所展示的面。</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 定义顶点坐标</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>vertices <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 点 0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 点 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 点 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 点 3</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 创建点云对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 定义面（每个面由 3 个顶点索引组成）</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>triangles <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 面 0: 点 0-2-1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 面 1: 点 0-1-3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 面 2: 点 0-3-2</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>    <span class=\"token comment\"># 面 3: 点 1-2-3</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 创建网格对象</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mesh <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>TriangleMesh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 设置顶点坐标和面索引</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>mesh<span class=\"token punctuation\">.</span>vertices <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">.</span>Vector3dVector<span class=\"token punctuation\">(</span>vertices<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>mesh<span class=\"token punctuation\">.</span>triangles <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">.</span>Vector3iVector<span class=\"token punctuation\">(</span>triangles<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 可选：计算法线并可视化</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>mesh<span class=\"token punctuation\">.</span>compute_vertex_normals<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>mesh<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> window_name<span class=\"token operator\">=</span><span class=\"token string\">\"直接构造的网格\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img loading=\"lazy\" src=\"/images/mesh.png\" alt=\"create mesh\"></p>\n<h2 id=\"文件内容\"><a class=\"markdownIt-Anchor\" href=\"#文件内容\">#</a> 文件内容</h2>\n<h3 id=\"pcd\"><a class=\"markdownIt-Anchor\" href=\"#pcd\">#</a> PCD</h3>\n<blockquote>\n<p>PCD 文件是一种常用的点云文件格式，由 PCL（Point Cloud Library）定义。PCD 文件可以包含点云的坐标、颜色、法线等信息。</p>\n</blockquote>\n<p>PCD 文件头的具体内容如下：<br>\n<strong>VERSION</strong><br>\n 指定 PCD 文件的版本，目前支持 PCD_V0.7 和 PCD_V0.7_BINARY 两种版本。<br>\n<strong>FIELDS</strong><br>\n 指定点云数据中包含的字段，每个字段用空格分隔。<br>\n示例：</p>\n<table>\n<thead>\n<tr>\n<th>字段内容</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FIELDS x y z</code></td>\n<td><code>x</code> 、 <code>y</code> 、 <code>z</code>  三个坐标字段</td>\n</tr>\n<tr>\n<td><code>FIELDS x y z rgb</code></td>\n<td><code>x</code> 、 <code>y</code> 、 <code>z</code>  三个坐标字段 +  <code>rgb</code>  颜色字段（深度相机）</td>\n</tr>\n<tr>\n<td><code>FIELDS x y z normal_x normal_y normal_z</code></td>\n<td><code>x</code> 、 <code>y</code> 、 <code>z</code>  三个坐标字段 +  <code>normal_x</code> 、 <code>normal_y</code> 、 <code>normal_z</code>  三个法线字段</td>\n</tr>\n<tr>\n<td><code>FIELDS j1 j2 j3</code></td>\n<td><code>j1</code> 、 <code>j2</code> 、 <code>j3</code>  三个字段（例如激光雷达）</td>\n</tr>\n</tbody>\n</table>\n<p><strong>SIZE</strong><br>\n 指定每个维度的大小<br>\n示例：</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SIZE 4 4 4</code></td>\n<td>每个字段大小为 4 字节</td>\n</tr>\n<tr>\n<td><code>SIZE 4 4 4 4</code></td>\n<td>每个字段大小为 4 字节</td>\n</tr>\n</tbody>\n</table>\n<p><strong>TYPE</strong><br>\n 指定每个字段的类型，每个字段用空格分隔。<br>\n示例：</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>TYPE F F F</code></td>\n<td>每个字段类型为浮点型</td>\n</tr>\n<tr>\n<td><code>TYPE U U U</code></td>\n<td>每个字段类型为无符号整型</td>\n</tr>\n<tr>\n<td><code>TYPE I I I</code></td>\n<td>每个字段类型为有符号整型</td>\n</tr>\n</tbody>\n</table>\n<p><strong>COUNT</strong><br>\n 指定每个维度的元素数量，每个字段用空格分隔。例如，x 数据通常有 1 个元素，但像 VFH 这样的特征描述符有 308 个元素。<br>\n<strong>WIDTH</strong><br>\n 指定点云数据的宽度，有序有结构表示行数，无需无结构等价 <code>POINTS</code> 。<br>\n<strong>HEIGHT</strong><br>\n 指定点云数据的高度，表示点云数据行数（无序无结构为 1）。<br>\n<strong>VIEWPOINT</strong><br>\n 为数据集中的点指定采集视点。这可能会在以后用于构建不同坐标系之间的变换，或用于帮助处理需要一致方向的特征，如曲面法线。<br>\n它由平移（tx-ty-tz）加上旋转四元数（qw-qx-qy-qz）组成。默认值为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>VIEWPOINT <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p><strong>POINTS</strong><br>\n 指定点云数据中点的数量。<br>\n<strong>DATA</strong><br>\n 指定点云数据的存储方式自版本 0.7 起，支持三种数据类型： <code>ascii</code> 、 <code>binary</code>  和 <code>binary_compressed</code> 。</p>\n<ul>\n<li><code>ascii</code>  每一行代表一个点的属性，由于是 <code>ascii</code>  码因此可以直接阅读，缺点就是占用空间大，空的点用 <code>NaN</code>  表示</li>\n<li><code>binary</code>  其中数据是 <code>pcl::PointCloud.points</code>  数组 / 向量的完整内存副本。在 Linux 系统上，我们使用 <code>mmap/munmap</code>  操作对数据进行最快的读 / 写访问。</li>\n<li><code>binary_compressed</code>  该文件（头部之后的所有内容）以一个 32 位无符号二进制数开始，该二进制数指定以压缩形式存在的数据的字节大小。接下来是另一个 32 位无符号二进制数，该二进制数指定未压缩数据的字节大小。然后是压缩后的数据。压缩和解压缩都使用 <code>Marc Lehmann</code>  的 <code>LZF</code>  算法。该算法在压缩率方面表现一般，但是速度非常快。对于典型的点云，压缩后的数据大小为原始大小的 30% 到 60%。在压缩之前，数据会被重新排序以改善压缩效果，从标准的结构数组布局变为数组结构布局。例如，一个包含三个点和 <code>x</code> 、 <code>y</code> 、 <code>z</code>  字段的云将从 <code>xyzxyzxyz</code>  重新排序为 <code>xxxyyyzzz</code> 。</li>\n</ul>\n<p>完整实例：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># PCD 文件头</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>VERSION .7</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>FIELDS x y z</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>SIZE <span class=\"token number\">4</span> <span class=\"token number\">4</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>TYPE F F F</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>COUNT <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>WIDTH <span class=\"token number\">27895</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>HEIGHT <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>VIEWPOINT <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>POINTS <span class=\"token number\">27895</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>DATA ascii</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">4.5875902</span> <span class=\"token number\">37.243198</span> <span class=\"token number\">46.776299</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">3.7279501</span> <span class=\"token number\">37.171902</span> <span class=\"token number\">46.5345</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">2.84834</span> <span class=\"token number\">37.056301</span> <span class=\"token number\">46.309101</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr></table></figure><h3 id=\"ply\"><a class=\"markdownIt-Anchor\" href=\"#ply\">#</a> PLY</h3>\n<blockquote>\n<p>PLY 文件是一种常用的多边形文件格式，由 PLY（Polygon File Format）定义。PLY 文件可以包含多边形、顶点、法线、颜色等信息。</p>\n</blockquote>\n<p><strong>文件头</strong><br>\n PLY 文件头包含以下信息：</p>\n<ul>\n<li>文件格式： <code>format ascii 1.0</code>  或  <code>format binary_little_endian 1.0</code>  或  <code>format binary_big_endian 1.0</code></li>\n<li>元素类型： <code>element vertex 1000</code>  或  <code>element face 1000</code></li>\n<li>属性： <code>property float x</code>  或  <code>property float y</code>  或  <code>property float z</code>  或  <code>property uchar red</code>  或  <code>property uchar green</code>  或  <code>property uchar blue</code></li>\n<li>结束： <code>end_header</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ply</code></td>\n<td>表示文件格式为 PLY。</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>指定文件格式，可以是  <code>ascii</code> 、 <code>binary_little_endian</code>  或  <code>binary_big_endian</code> 。</td>\n</tr>\n<tr>\n<td><code>comment</code></td>\n<td>表示注释，可以包含任何文本。</td>\n</tr>\n<tr>\n<td><code>element</code></td>\n<td>指定元素类型，可以是  <code>vertex</code>  或  <code>face</code> 。</td>\n</tr>\n<tr>\n<td><code>property</code></td>\n<td>指定属性，可以是  <code>float</code> 、 <code>int</code> 、 <code>uchar</code>  等。</td>\n</tr>\n<tr>\n<td><code>end_header</code></td>\n<td>表示文件头结束。</td>\n</tr>\n</tbody>\n</table>\n<p>完整实例</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ply</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">format</span> binary_little_endian <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>comment VCGLIB generated</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>element vertex <span class=\"token number\">15934</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>property double x</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>property double y</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>property double z</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>property uchar red</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>property uchar green</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>property uchar blue</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>property uchar alpha</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>element face <span class=\"token number\">31390</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>property list uchar int vertex_indices</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>end_header</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># vertex</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token parameter variable\">-0.015828</span> <span class=\"token number\">0.011844</span> <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">255</span> <span class=\"token number\">255</span> <span class=\"token number\">255</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token parameter variable\">-0.015828</span> <span class=\"token number\">0.011844</span> <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">255</span> <span class=\"token number\">255</span> <span class=\"token number\">255</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># face (首位表示此面所有点的数量，此处是三个点索引构成的面)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">3</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">3</span> <span class=\"token number\">6</span> <span class=\"token number\">7</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">3</span> <span class=\"token number\">15631</span> <span class=\"token number\">15632</span> <span class=\"token number\">15633</span></pre></td></tr></table></figure><h1 id=\"open3d\"><a class=\"markdownIt-Anchor\" href=\"#open3d\">#</a> Open3D</h1>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> open3d</pre></td></tr></table></figure><h2 id=\"读取点云\"><a class=\"markdownIt-Anchor\" href=\"#读取点云\">#</a> 读取点云</h2>\n<p><code>o3d.io.read_point_cloud</code>  函数可以读取点云文件，并返回一个  <code>open3d.geometry.PointCloud</code>  对象。<br>\n函数定义如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read_point_cloud</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">'auto'</span><span class=\"token punctuation\">,</span> remove_nan_points<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> remove_infinite_points<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> print_progress<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        open3d.cpu.pybind.geometry.PointCloud</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"\"\"</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>filename</code></td>\n<td>点云文件的路径。</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>点云文件的格式，默认为  <code>auto</code> ，表示自动检测文件格式，支持 <code>pcd</code> 、 <code>ply</code> 、 <code>xyz</code>  等格式。</td>\n</tr>\n<tr>\n<td><code>remove_nan_points</code></td>\n<td>是否移除包含  <code>NaN</code>  值的点，默认为  <code>False</code> 。</td>\n</tr>\n<tr>\n<td><code>remove_infinite_points</code></td>\n<td>是否移除包含  <code>Inf</code>  值的点，默认为  <code>False</code> 。</td>\n</tr>\n<tr>\n<td><code>print_progress</code></td>\n<td>是否打印读取进度，默认为  <code>False</code> 。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"写入点云\"><a class=\"markdownIt-Anchor\" href=\"#写入点云\">#</a> 写入点云</h2>\n<p><code>o3d.io.write_point_cloud</code>  函数可以写入点云文件，并返回一个  <code>open3d.geometry.PointCloud</code>  对象。<br>\n函数定义如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">write_point_cloud</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> pointcloud<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">'auto'</span><span class=\"token punctuation\">,</span> write_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> compressed<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> print_progress<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># real signature unknown; restored from __doc__</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        bool</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>filename</code></td>\n<td>点云文件的路径。</td>\n</tr>\n<tr>\n<td><code>pointcloud</code></td>\n<td>要写入的点云对象。</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>点云文件的格式，默认为  <code>auto</code> ，表示自动检测文件格式。</td>\n</tr>\n<tr>\n<td><code>write_ascii</code></td>\n<td>是否以 ASCII 格式写入，默认为  <code>False</code> 。</td>\n</tr>\n<tr>\n<td><code>compressed</code></td>\n<td>是否以压缩格式写入，默认为  <code>False</code> 。</td>\n</tr>\n<tr>\n<td><code>print_progress</code></td>\n<td>是否打印写入进度，默认为  <code>False</code> 。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>write_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.pcd\"</span><span class=\"token punctuation\">,</span> pcd<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"显示点云\"><a class=\"markdownIt-Anchor\" href=\"#显示点云\">#</a> 显示点云</h2>\n<p><code>o3d.visualization.draw_geometries</code>  函数可以显示点云。</p>\n<p>函数定义如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">draw_geometries</span><span class=\"token punctuation\">(</span>geometry_list<span class=\"token punctuation\">,</span> open3d_cpu_pybind_geometry_Geometry<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>geometry_list</code></td>\n<td>要显示的几何对象列表。</td>\n</tr>\n<tr>\n<td><code>window_name</code></td>\n<td>窗口标题，默认为 “Open3D”。</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>窗口宽度，默认为 1920。</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>窗口高度，默认为 1080。</td>\n</tr>\n<tr>\n<td><code>left</code></td>\n<td>窗口左边界，默认为 50。</td>\n</tr>\n<tr>\n<td><code>top</code></td>\n<td>窗口上边界，默认为 50。</td>\n</tr>\n<tr>\n<td><code>point_show_normal</code></td>\n<td>是否显示点法线，默认为 False, 如果为 True，需要事先计算点云法线</td>\n</tr>\n<tr>\n<td><code>mesh_show_wireframe</code></td>\n<td>是否显示网格线框，默认为 False。</td>\n</tr>\n<tr>\n<td><code>mesh_show_back_face</code></td>\n<td>是否显示网格背面，默认为 False。</td>\n</tr>\n<tr>\n<td><code>lookat</code></td>\n<td>相机观察点，默认为 None。</td>\n</tr>\n<tr>\n<td><code>up</code></td>\n<td>相机上方向，默认为 None。</td>\n</tr>\n<tr>\n<td><code>front</code></td>\n<td>相机前方向，默认为 None。</td>\n</tr>\n<tr>\n<td><code>zoom</code></td>\n<td>相机缩放比例，默认为 None。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pcd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> window_name<span class=\"token operator\">=</span><span class=\"token string\">\"Open3D\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"点云操作\"><a class=\"markdownIt-Anchor\" href=\"#点云操作\">#</a> 点云操作</h1>\n<h2 id=\"点云法线估计\"><a class=\"markdownIt-Anchor\" href=\"#点云法线估计\">#</a> 点云法线估计</h2>\n<blockquote>\n<p>点云法线估计是点云处理中的一项重要任务，它可以帮助我们理解点云的几何形状和结构。点云法线估计的目的是计算每个点的法线向量，法线向量垂直于点云表面的切平面。</p>\n</blockquote>\n<p><code>o3d.geometry.PointCloud.estimate_normals</code>  函数可以估计点云的法线。</p>\n<p>函数定义如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">estimate_normals</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> search_param<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> fast_normal_computation<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> print_progress<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># real signature unknown; restored from __doc__</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        open3d.cpu.pybind.geometry.PointCloud</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"\"\"</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>search_param</code></td>\n<td>搜索参数，默认为 None。</td>\n</tr>\n<tr>\n<td><code>fast_normal_computation</code></td>\n<td>是否使用快速法线计算，默认为 False。</td>\n</tr>\n<tr>\n<td><code>print_progress</code></td>\n<td>是否打印进度，默认为 False。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pcd<span class=\"token punctuation\">.</span>estimate_normals<span class=\"token punctuation\">(</span>search_param<span class=\"token operator\">=</span>o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>KDTreeSearchParamHybrid<span class=\"token punctuation\">(</span>radius<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> max_nn<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"点云降采样\"><a class=\"markdownIt-Anchor\" href=\"#点云降采样\">#</a> 点云降采样</h2>\n<blockquote>\n<p>点云降采样是一种常用的点云处理技术，用于减少点云中的点数，从而降低计算复杂度。点云降采样可以通过多种方法实现，例如体素网格降采样、八叉树降采样等。</p>\n</blockquote>\n<p><code>o3d.geometry.PointCloud.uniform_down_sample</code>  函数可以降采样点云。</p>\n<p>示例：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pcd <span class=\"token operator\">=</span> pcd<span class=\"token punctuation\">.</span>uniform_down_sample<span class=\"token punctuation\">(</span>every_k_points<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># every_k_points: 每 K 个点保留一个</span></pre></td></tr></table></figure><p><strong>体素网格降采样</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pcd <span class=\"token operator\">=</span> pcd<span class=\"token punctuation\">.</span>voxel_down_sample<span class=\"token punctuation\">(</span>voxel_size<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># voxel_size: 体素大小</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pcd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>原始点云、降采样后的点云、体素网格降采样后的点云可视化结果如下：<br>\n<img loading=\"lazy\" src=\"/images/cat_pcd.png\" alt=\"cat_points\"> <img loading=\"lazy\" src=\"/images/cat_down.png\" alt=\"cat_down\"> <img loading=\"lazy\" src=\"/images/cat_voxel.png\" alt=\"cat_voxel\"></p>\n<h2 id=\"kdtree\"><a class=\"markdownIt-Anchor\" href=\"#kdtree\">#</a> KDTree</h2>\n<p><code>o3d.geometry.KDTreeFlann</code>  是 Open3D 中用于实现 k-d 树的类。k-d 树是一种用于多维空间中快速搜索最近邻点的数据结构。</p>\n<ul>\n<li><code>o3d.geometry.KDTreeFlann</code> : k-d 树类，用于实现 k-d 树。</li>\n<li><code>search_knn_vector_3d</code> ：在点云中搜索指定点的 k 个最近邻点。</li>\n<li><code>search_radius_vector_3d</code> ：在点云中搜索指定点半径内的所有点。</li>\n<li><code>search_hybrid_vector_3d</code> ：在点云中搜索指定点 k 个最近邻点和半径内的所有点。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pcd_tree <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>KDTreeFlann<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 将点云设置为灰色</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pcd<span class=\"token punctuation\">.</span>paint_uniform_color<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 搜索某点的 K 个最近邻点</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>num_k<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pcd_tree<span class=\"token punctuation\">.</span>search_knn_vector_3d<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 将最近邻点的颜色设置为红色</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"所得K邻域点索引点数为：\"</span><span class=\"token punctuation\">,</span> num_k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 搜索每个点半径为 r 的所有点</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pcd_tree<span class=\"token punctuation\">.</span>search_radius_vector_3d<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 将半径内的点的颜色设置为绿色</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 搜索每个点的 k 个最近邻点和半径为 r 的所有点</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> idx_knn<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pcd_tree<span class=\"token punctuation\">.</span>search_hybrid_vector_3d<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">.</span>points<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 将半径内的点的颜色设置为蓝色</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pcd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> window_name<span class=\"token operator\">=</span><span class=\"token string\">\"Open3D\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"octree\"><a class=\"markdownIt-Anchor\" href=\"#octree\">#</a> Octree</h2>\n<blockquote>\n<p>八叉树（Octree）是一种用于三维空间中的数据结构，它将空间划分为 8 个子空间，每个子空间再继续划分，直到达到指定的深度。八叉树可以用于点云数据的快速搜索和可视化，例如最近邻搜索、空间分割等。</p>\n</blockquote>\n<p><img loading=\"lazy\" src=\"/images/Octree.svg\" alt=\"八叉树\"></p>\n<ul>\n<li><code>o3d.geometry.Octree(max_depth=int)</code> : 八叉树类，用于实现八叉树。\n<ul>\n<li><code>max_depth</code> ：八叉树的最大深度。</li>\n</ul>\n</li>\n<li><code>convert_from_point_cloud</code> ：将点云转换为八叉树。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 创建八叉树</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>octree <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>Octree<span class=\"token punctuation\">(</span>max_depth<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 将点云转换为八叉树</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>octree<span class=\"token punctuation\">.</span>convert_from_point_cloud<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>octree<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>体素栅格构建 Octree</strong><br>\n 使用  <code>create_from_voxel_grid</code>  方法从体素栅格创建八叉树。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> open3d <span class=\"token keyword\">as</span> o3d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pcd <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_point_cloud<span class=\"token punctuation\">(</span><span class=\"token string\">\"cat.pcd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 创建一个体素栅格</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>voxel_grid <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>VoxelGrid<span class=\"token punctuation\">.</span>create_from_point_cloud<span class=\"token punctuation\">(</span>pcd<span class=\"token punctuation\">,</span> voxel_size<span class=\"token operator\">=</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 创建八叉树</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>octree <span class=\"token operator\">=</span> o3d<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">.</span>Octree<span class=\"token punctuation\">(</span>max_depth<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># max_depth: 八叉树的最大深度</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>octree<span class=\"token punctuation\">.</span>convert_from_voxel_grid<span class=\"token punctuation\">(</span>voxel_grid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>o3d<span class=\"token punctuation\">.</span>visualization<span class=\"token punctuation\">.</span>draw_geometries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>octree<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong> <code>K-D树</code> 和 <code>八叉树</code> 具体适用场景分析</strong>：</p>\n<ol>\n<li>K-D 树的优势场景</li>\n</ol>\n<ul>\n<li>高维数据处理</li>\n<li>高效的最近邻搜索</li>\n<li>范围查询</li>\n<li>低内存占用</li>\n</ul>\n<ol start=\"2\">\n<li>八叉树的优势场景</li>\n</ol>\n<ul>\n<li>纯 3D 空间的均匀划分</li>\n<li>体素化与多分辨率处理</li>\n<li>碰撞检测与空间占用查询</li>\n<li>点云压缩与降采样</li>\n</ul>\n<ol start=\"3\">\n<li>实际应用中的选择策略</li>\n</ol>\n<ul>\n<li>优先使用 K-D 树的情况：\n<ul>\n<li>需频繁进行最近邻搜索（如 ICP 配准、法线估计）；</li>\n<li>点云包含非空间维度信息（如颜色、强度）；</li>\n<li>数据分布不均匀，需要自适应划分提高搜索效率。</li>\n</ul>\n</li>\n<li>优先使用八叉树的情况：\n<ul>\n<li>处理纯 3D 空间数据，且需要快速划分空间（如体素化、空间索引）；</li>\n<li>涉及多分辨率分析或三维重建；</li>\n<li>需要高效的碰撞检测或空间占用查询。</li>\n</ul>\n</li>\n<li>混合使用的场景：\n<ul>\n<li>在复杂任务中，两者可结合使用。例如：</li>\n<li>先用八叉树进行粗粒度空间划分，再对每个叶节点内的点构建 K-D 树进行精细搜索；</li>\n<li>在实时 SLAM 系统中，用八叉树管理全局地图的空间索引，用 K-D 树进行局部点云的特征匹配。</li>\n</ul>\n</li>\n</ul>\n<p><strong>总结</strong></p>\n<blockquote>\n<ul>\n<li><code>K-D树</code> 更适合处理高维数据和非均匀分布的点云，在最近邻搜索和范围查询中表现优异；</li>\n<li><code>八叉树</code> 则在纯 3D 空间划分、体素化和多分辨率处理中具有天然优势。</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "3D"
            ]
        }
    ]
}