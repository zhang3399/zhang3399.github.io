{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodeVortex记事本 • All posts by \"多线程\" tag",
    "description": "滴答滴答滴答",
    "home_page_url": "https://zhang3399.github.io",
    "items": [
        {
            "id": "https://zhang3399.github.io/2024/06/08/C++/2024-6-15-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "url": "https://zhang3399.github.io/2024/06/08/C++/2024-6-15-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "title": "数据处理及内存管理",
            "date_published": "2024-06-08T02:00:00.000Z",
            "content_html": "<h1 id=\"多线程\"><a class=\"markdownIt-Anchor\" href=\"#多线程\">#</a> 多线程</h1>\n<h2 id=\"线程池\"><a class=\"markdownIt-Anchor\" href=\"#线程池\">#</a> 线程池</h2>\n<p><strong>函数指针在线程池中的应用</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义任务结构体</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Task</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>function<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span> arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 函数指针</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> arg<span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 参数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 线程池中的工作线程执行任务</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">worker_thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span> arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Task</span><span class=\"token operator\">*</span> task <span class=\"token operator\">=</span> <span class=\"token function\">get_task_from_queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        task<span class=\"token operator\">-></span><span class=\"token function\">function</span><span class=\"token punctuation\">(</span>task<span class=\"token operator\">-></span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 执行具体任务</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>**​灵活性：** 可以动态添加不同类型的任务（如网络请求、文件操作、计算任务）。</li>\n<li><strong>​解耦：</strong> 线程池代码无需知道任务具体内容，只需调用  <code>function(arg)</code> 。</li>\n</ul>\n",
            "tags": [
                "多线程"
            ]
        }
    ]
}