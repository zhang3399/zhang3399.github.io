{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodeVortex记事本 • All posts by \"单项负载识别\" tag",
    "description": "滴答滴答滴答",
    "home_page_url": "https://zhang3399.github.io",
    "items": [
        {
            "id": "https://zhang3399.github.io/2025/06/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2025-6-13-%E5%8D%95%E9%A1%B9%E8%B4%9F%E8%BD%BD%E8%AF%86%E5%88%AB/",
            "url": "https://zhang3399.github.io/2025/06/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2025-6-13-%E5%8D%95%E9%A1%B9%E8%B4%9F%E8%BD%BD%E8%AF%86%E5%88%AB/",
            "title": "单项负载识别",
            "date_published": "2025-06-13T02:00:00.000Z",
            "content_html": "<p>项目地址：<a href=\"https://github.com/zhang3399/Single-phase_load_recognition\">https://github.com/zhang3399/Single-phase_load_recognition</a></p>\n<h1 id=\"项目简介\"><a class=\"markdownIt-Anchor\" href=\"#项目简介\">#</a> 项目简介</h1>\n<p>在一个单相电力线上，对电压电流数据进行录波，从波形数据上提取有效信息，通过建模 - 训练的方式，识别出电力线上正在使用的电器有哪些。</p>\n<ul>\n<li><code>utils/datasets.py</code> : 将数据集处理为输入特征和学习标签</li>\n<li><code>utils/models.py</code> : 定义 LSTM 模型</li>\n<li><code>config/params.py</code> : 配置模型参数，存储路径，识别目标等</li>\n<li><code>results/train.py</code> : 训练模型，验证集识别效果</li>\n<li><code>predict.py</code> : 使用训练好的模型进行预测</li>\n</ul>\n<h1 id=\"数据集说明\"><a class=\"markdownIt-Anchor\" href=\"#数据集说明\">#</a> 数据集说明</h1>\n<ul>\n<li>使用公开数据集：NILM 国内电器设备数据，下载地址：<a href=\"https://gitcode.com/Universal-Tool/47e33/?utm_source=article_gitcode_universal&amp;index=top&amp;type=card\">https://gitcode.com/Universal-Tool/47e33/?utm_source=article_gitcode_universal&amp;index=top&amp;type=card</a></li>\n<li>数据集结构：一个 Excel 文件包含多张表，每张表记录一个设备的电压、电流等以及操作状态记录。</li>\n</ul>\n<p>数据集包含了以下核心结构：</p>\n<ol>\n<li>设备信息：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>设备 ID</th>\n<th>设备类型</th>\n<th>工作参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>YD1</td>\n<td>奥克斯风扇</td>\n<td>220V, 60W</td>\n</tr>\n<tr>\n<td>YD2</td>\n<td>美的微波炉</td>\n<td>220V, 输入 1150W, 输出 700W</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n</tr>\n<tr>\n<td>YD11</td>\n<td>创维电视机</td>\n<td>220V, 50Hz, 150W</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>​​设备监测数据：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n<th>单位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>time</td>\n</tr>\n<tr>\n<td>Ic</td>\n<td>电流值</td>\n<td>0.001 A</td>\n</tr>\n<tr>\n<td>Uc</td>\n<td>电压值</td>\n<td>0.1 V</td>\n</tr>\n<tr>\n<td>PC</td>\n<td>有功功率</td>\n<td>0.0001kW</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>周波数据：</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr></tr>\n<tr>\n<td>IC001</td>\n<td>电流周波第 1 采样点</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n</tr>\n<tr>\n<td>UC128</td>\n<td>电压周波第 128 采样点</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"4\">\n<li>​谐波数据​​</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n<th>单位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>time</td>\n</tr>\n<tr>\n<td>IC02</td>\n<td>2 次电流谐波含有率</td>\n<td>%</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n</tr>\n<tr>\n<td>UC51</td>\n<td>2 次电压谐波含有率</td>\n<td>%</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"5\">\n<li>用电设备操作记录</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>时间</th>\n<th>设备</th>\n<th>工作状态</th>\n<th>操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2019-01-01 00:00:00</td>\n<td>YD1</td>\n<td>开启</td>\n<td>启动</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2019-01-01 00:00:30</td>\n<td>YD1</td>\n<td>关闭</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>3</td>\n<td>2019-01-01 00:00:00</td>\n<td>YD1</td>\n<td>1 档</td>\n<td>启动</td>\n</tr>\n<tr>\n<td>4</td>\n<td>2019-01-01 00:00:30</td>\n<td>YD1</td>\n<td>2 档</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数据预处理\"><a class=\"markdownIt-Anchor\" href=\"#数据预处理\">#</a> 数据预处理</h2>\n<p><strong>处理流程</strong>：</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A<span class=\"token text string\">[原始Excel]</span> <span class=\"token arrow operator\">--></span> B<span class=\"token text string\">[时间对齐]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    B <span class=\"token arrow operator\">--></span> C<span class=\"token text string\">[状态标签编码]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    C <span class=\"token arrow operator\">--></span> D<span class=\"token text string\">[特征工程]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    D <span class=\"token arrow operator\">--></span> E<span class=\"token text string\">[训练/测试集分割]</span></pre></td></tr></table></figure><p>关键处理步骤：</p>\n<ol>\n<li>时间对齐​​：</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>start_times <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    df_device<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    df_wave<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>end_times <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    df_device<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    df_wave<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 最晚开始时间和最早结束时间</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>common_start <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>start_times<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>common_end <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>end_times<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 裁剪设备、周波、谐波表到共同时间范围</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df_device <span class=\"token operator\">=</span> df_device<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>df_device<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> common_start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>df_device<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> common_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df_wave <span class=\"token operator\">=</span> df_wave<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>df_wave<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> common_start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>df_wave<span class=\"token punctuation\">[</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> common_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>状态标签编码：(二分类与多分类)</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">createLabel</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">,</span> output_path<span class=\"token operator\">=</span><span class=\"token string\">'device_encoders.json'</span><span class=\"token punctuation\">,</span> multi_class<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    创建设备状态标签并保存映射关系</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    参数:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        df: 包含设备状态的DataFrame</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        output_path: 映射关系保存路径</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        multi_class: 是否使用多分类（默认True）</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    device_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>columns <span class=\"token keyword\">if</span> col<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'YD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    device_encoders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> device <span class=\"token keyword\">in</span> device_cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 获取设备的所有状态</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        states <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span>device<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        state_count <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> multi_class <span class=\"token keyword\">and</span> state_count <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\"># 多分类映射：为每个状态分配唯一整数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            mapping <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>state<span class=\"token punctuation\">:</span> i <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> state <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>device<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 状态(</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>state_count<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">种): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>states<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> → 编码: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mapping<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\"># 创建多分类标签列</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            df<span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f'is_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>device<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>device<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>mapping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 二分类映射：关闭→0，其他→1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            mapping <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>state<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"关闭\"</span> <span class=\"token keyword\">else</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> state <span class=\"token keyword\">in</span> states<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>device<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 状态(</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>state_count<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">种): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>states<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> → 二值编码: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mapping<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token comment\"># 创建二分类标签列</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            df<span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f'is_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>device<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>device<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>mapping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        device_encoders<span class=\"token punctuation\">[</span>device<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mapping</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 保存映射关系为 JSON 格式</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>device_encoders<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"映射关系已保存到 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>output_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> df</pre></td></tr></table></figure><p>二分类映射关系：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"YD10\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"1档冷风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"1档热风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"2档冷风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">\"2档热风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"关闭\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"YD11\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"关闭\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"打开\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ...</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>多分类映射关系：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"YD10\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"1档冷风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"1档热风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"2档冷风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">\"2档热风\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"关闭\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"YD11\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"关闭\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"打开\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ....</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>特征工程：<br>\n对电压、电流、周波和谐波数据与设备状态之间的相关性分析：<br>\n分析结果保存在根目录下，考虑问题场景是基于电压电流，识别运行设备，只使用开源数据集的电压电流特征数据作为特征序列。</li>\n</ol>\n<h1 id=\"模型搭建\"><a class=\"markdownIt-Anchor\" href=\"#模型搭建\">#</a> 模型搭建</h1>\n<p>考虑电压电流数据呈时间连续，设备启停在过往与当前时刻的电压电流具有相应的特征变化，因此采用时序模型。</p>\n<p><strong>核心</strong>：</p>\n<ul>\n<li>\n<p><code>LSTM</code> ：长短期记忆网络，擅长处理时间序列数据，能够捕捉时间序列中的长期依赖关系。</p>\n</li>\n<li>\n<p><code>识别方式</code> ：采用 <code>i~j</code>  组时间序列电流电压数据，识别第 <code>j</code>  组时间序列下的电器状态， <code>i~j</code>  由 <code>params.py</code>  参数 <code>WINDOW_SIZE</code>  值控制，即 <code>滑动窗口</code> ，LSTM 模型学习步长。</p>\n</li>\n</ul>\n<h2 id=\"模型训练\"><a class=\"markdownIt-Anchor\" href=\"#模型训练\">#</a> 模型训练</h2>\n<p>训练说明：</p>\n<ul>\n<li>二分类\n<ul>\n<li><code>datahandl.py</code>  处理：将 <code>df = createLabel(df, multi_class=False)</code>  改为 <code>multi_class=False</code> ，将状态标签编码为二分类标签。</li>\n<li>执行 <code>train.py</code> ：训练完成后，模型保存在 <code>results/train</code>  文件中，可执行 <code>predict.py</code>  进行推理。</li>\n</ul>\n</li>\n<li>多分类\n<ul>\n<li><code>datahandl.py</code>  处理：将 <code>df = createLabel(df, multi_class=True)</code>  改为 <code>multi_class=True</code> ，将状态标签编码为多分类标签。</li>\n<li>执行 <code>train_plus.py</code> ：可以训练，但是目前由于数据量不足，泛化能力较差，推理模块 <code>predict_plus.py</code>  暂时未实现。</li>\n</ul>\n</li>\n</ul>\n<p><strong>方案一：</strong> （二分类模型如下）</p>\n<p>模型为每个设备配置一个输出头，预测该设备是否在运行。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplianceLSTM</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"多输出电器状态识别LSTM模型\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> input_size<span class=\"token punctuation\">,</span> hidden_size<span class=\"token punctuation\">,</span> num_layers<span class=\"token punctuation\">,</span> num_outputs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ApplianceLSTM<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 减少隐藏层大小和层数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>hidden_size <span class=\"token operator\">=</span> hidden_size</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>num_layers <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>num_layers<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 限制层数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># LSTM 层 - 添加 dropout</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lstm <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTM<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            input_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            self<span class=\"token punctuation\">.</span>num_layers<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            batch_first<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            bidirectional<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 移除双向结构减少复杂度</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            dropout<span class=\"token operator\">=</span><span class=\"token number\">0.3</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>num_layers <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># 层间 dropout</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># 简化全连接层</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fc <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 增加 dropout 比例</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LayerNorm<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 添加批归一化</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\"># 共享特征提取，独立输出层</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>output_layers <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>ModuleList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>Sigmoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num_outputs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># 初始化隐藏状态</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        h0 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>num_layers<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        c0 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>num_layers<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\"># LSTM 前向传播</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        out<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>lstm<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>h0<span class=\"token punctuation\">,</span> c0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 只取最后一个时间步的输出</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\"># 通过全连接层</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\"># 每个电器一个输出头</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        outputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>output_layer<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> output_layer <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>output_layers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\"># 合并输出为 [batch_size, num_outputs]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span>outputs<span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>方案二：（多输出头的多类别预测）<br>\n模型为每个设备配置一个输出头，并根据设备状态数量，设计对应的输出维度。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplianceLSTM_plus</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"支持不同设备不同状态数的多输出LSTM模型\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> input_size<span class=\"token punctuation\">,</span> hidden_size<span class=\"token punctuation\">,</span> num_layers<span class=\"token punctuation\">,</span> states_per_device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ApplianceLSTM<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>hidden_size <span class=\"token operator\">=</span> hidden_size</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>num_layers <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>num_layers<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>states_per_device <span class=\"token operator\">=</span> states_per_device  <span class=\"token comment\"># 每个设备的状态数列表</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># LSTM 层</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>lstm <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTM<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            input_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            hidden_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            num_layers<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            batch_first<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            bidirectional<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            dropout<span class=\"token operator\">=</span><span class=\"token number\">0.3</span> <span class=\"token keyword\">if</span> num_layers <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 共享的全连接层</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fc <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>hidden_size<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LayerNorm<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 为每个设备创建独立的输出层（状态数不同）</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>output_layers <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>ModuleList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> states<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> states <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>states_per_device</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        h0 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>num_layers<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        c0 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>num_layers<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        out<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>lstm<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>h0<span class=\"token punctuation\">,</span> c0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取最后一个时间步的输出</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\"># 每个设备独立输出（列表形式，每个元素对应一个设备的 logits）</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        outputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>layer<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> layer <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>output_layers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> outputs</pre></td></tr></table></figure><p><strong>识别结果：</strong><br>\n由于数据体量过小，有些过拟合，存在少量将关闭状态识别为开启状态的问题。<br>\n<img loading=\"lazy\" src=\"/images/appliance_state_prediction.png\" alt=\"\"></p>\n",
            "tags": [
                "单项负载识别"
            ]
        }
    ]
}