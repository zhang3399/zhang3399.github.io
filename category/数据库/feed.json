{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodeVortex记事本 • All posts by \"数据库\" category",
    "description": "滴答滴答滴答",
    "home_page_url": "https://zhang3399.github.io",
    "items": [
        {
            "id": "https://zhang3399.github.io/2024/06/15/%E6%95%B0%E6%8D%AE%E5%BA%93/2023-10-12-SQL/",
            "url": "https://zhang3399.github.io/2024/06/15/%E6%95%B0%E6%8D%AE%E5%BA%93/2023-10-12-SQL/",
            "title": "SQL",
            "date_published": "2024-06-15T02:00:00.000Z",
            "content_html": "<blockquote>\n<p>SQL (Structured Query Language) 是用于管理和操作关系数据库的标准化编程语言。它允许用户执行各种操作，如查询、更新、插入和删除数据，以及管理数据库结构和权限。</p>\n</blockquote>\n<p><strong>SQL 分类：</strong></p>\n<ol>\n<li><code>DDL</code>  数据定义语言，用来定义数据库对象（数据库、表、字段）</li>\n<li><code>DML</code>  数据操作语言，用来对数据库表中的数据进行增删改</li>\n<li><code>DQL</code>  数据查询语言，用来查询数据库中的记录</li>\n<li><code>DCL</code>  数据控制语言，用来创建数据库用户、控住数据库的访问权限</li>\n</ol>\n<h1 id=\"ddl-数据库操作\"><a class=\"markdownIt-Anchor\" href=\"#ddl-数据库操作\">#</a> DDL - 数据库操作</h1>\n<p>查询：查询所有数据库   <code>SHOW DATABASES</code>  ; 查询当前数据库  <code>SELECT DATABASE()</code> ;<br>\n 创建： <code>CREATE DATABASE [IF NOT EXISTS]</code>  数据库名  <code>【DEFAULT CHARSET字符集】``【COLLATE排序规则】</code> ;<br>\n 删除： <code>DROP DATABASE【IF EXISTS】</code>  数据库名；<br>\n使用： <code>USE</code>  数据库名；</p>\n<p><strong>DDL - 表操作 - 查询</strong><br>\n查询当前数据库所有表 : <code>SHOW TABLES</code> ;<br>\n 查询表结构： <code>DESC</code>  表名；<br>\n查询指定表的建表语句： <code>SHOW CREATE TABLE</code>  表名；<br>\n<strong>DDL - 表操作 - 创建</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    字段<span class=\"token number\">1</span>\t字段<span class=\"token number\">1</span>类型 <span class=\"token keyword\">COMMENT</span> 字段<span class=\"token number\">1</span>注释，</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    字段<span class=\"token number\">2</span>\t字段<span class=\"token number\">2</span>类型 <span class=\"token keyword\">COMMENT</span> 字段<span class=\"token number\">2</span>注释，</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    字段<span class=\"token number\">3</span>\t字段<span class=\"token number\">3</span>类型 <span class=\"token keyword\">COMMENT</span> 字段<span class=\"token number\">3</span>注释，</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    字段n\t字段n类型 <span class=\"token keyword\">COMMENT</span> 字段n注释</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">COMMENT</span> 表注释；      <span class=\"token comment\">## 注意：【...】为可选参数，最后一个字段后面没有逗号</span></pre></td></tr></table></figure><p><strong>DDL - 表操作 - 数值类型</strong><br>\n MySQL 中的数据类型很多，主要分为三类：数值类型、字符串类型、日期时间类型。</p>\n<ul>\n<li>数值类型：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th>大小</th>\n<th style=\"text-align:center\">范围（有符号）</th>\n<th style=\"text-align:center\">范围（无符号）</th>\n<th style=\"text-align:center\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>TINYINT</code></td>\n<td>1 字节</td>\n<td style=\"text-align:center\">±(2^7)-1</td>\n<td style=\"text-align:center\">0~255</td>\n<td style=\"text-align:center\">小整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SMALLINT</code></td>\n<td>2 字节</td>\n<td style=\"text-align:center\">±(2^15)-1</td>\n<td style=\"text-align:center\">0~65 535</td>\n<td style=\"text-align:center\">大整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MEDIUMINT</code></td>\n<td>3 字节</td>\n<td style=\"text-align:center\">±(2^23)-1</td>\n<td style=\"text-align:center\">0~16 777 215</td>\n<td style=\"text-align:center\">大整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>INT或INTEGER</code></td>\n<td>4 字节</td>\n<td style=\"text-align:center\">±(2^31)-1</td>\n<td style=\"text-align:center\">0~4 294 967 295</td>\n<td style=\"text-align:center\">大整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>BIGINT</code></td>\n<td>8 字节</td>\n<td style=\"text-align:center\">±(2^63)-1</td>\n<td style=\"text-align:center\">0~18 446 744 073 709 551 615</td>\n<td style=\"text-align:center\">极大整数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>FLOAT</code></td>\n<td>4 字节</td>\n<td style=\"text-align:center\">±(1.175494351E-38)</td>\n<td style=\"text-align:center\">±(3.402823466E+38)</td>\n<td style=\"text-align:center\">单精度浮点数值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DOUBLE</code></td>\n<td>8 字节</td>\n<td style=\"text-align:center\">±(2.2250738585072014E-308)</td>\n<td style=\"text-align:center\">±(1.7976931348623157E+308)</td>\n<td style=\"text-align:center\">双精度浮点数值</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>字符串类型：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">大小</th>\n<th style=\"text-align:center\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>CHAR</code></td>\n<td style=\"text-align:center\">0~255 字节</td>\n<td style=\"text-align:center\">定长字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>VARCHAR</code></td>\n<td style=\"text-align:center\">0~65535 字节</td>\n<td style=\"text-align:center\">变长字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TINYBLOB</code></td>\n<td style=\"text-align:center\">0~255 字节</td>\n<td style=\"text-align:center\">不超过 255 个字符的二进制字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TINYTEXT</code></td>\n<td style=\"text-align:center\">0~255 字节</td>\n<td style=\"text-align:center\">短文本字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>BLOB</code></td>\n<td style=\"text-align:center\">0~65 535 字节</td>\n<td style=\"text-align:center\">二进制形式的长文本数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TEXT</code></td>\n<td style=\"text-align:center\">0~65 535 字节</td>\n<td style=\"text-align:center\">长文本数据</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>日期时间类型：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">大小（字节）</th>\n<th style=\"text-align:center\">范围</th>\n<th style=\"text-align:center\">格式</th>\n<th style=\"text-align:center\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>DATE</code></td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">1000-01-01/9999-12-31</td>\n<td style=\"text-align:center\">YYYY-MM-DD</td>\n<td style=\"text-align:center\">日期值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TIME</code></td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">‘-838:59:59’/‘838:59:59’</td>\n<td style=\"text-align:center\">HH:MM:SS</td>\n<td style=\"text-align:center\">时间值或持续时间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>YEAR</code></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1901/2155</td>\n<td style=\"text-align:center\">YYYY</td>\n<td style=\"text-align:center\">年份值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DATETIME</code></td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">1000-01-01 00:00:00/9999-12-31 23:59:59</td>\n<td style=\"text-align:center\">YYYY-MM-DD HH:MM:SS</td>\n<td style=\"text-align:center\">混合日期和时间值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TIMESTAMP</code></td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">1970-01-01 00:00:01/2038 结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038 年 1 月 19 日 凌晨 03:14:07</td>\n<td style=\"text-align:center\">YYYY-MM-DD HH:MM:SS</td>\n<td style=\"text-align:center\">混合日期和时间值，时间戳</td>\n</tr>\n</tbody>\n</table>\n<p><strong>DDL - 表操作 - 修改</strong></p>\n<ol>\n<li>添加字段： <code>ALTER TABLE</code>  表名 <code>ADD</code>  字段名 类型（长度） <code>【COMMENT 注释】``【约束】</code> ;</li>\n<li>修改数据类型： <code>ALTER TABLE</code>  表名 <code>MODIFY</code>  字段名 新数据类型（长度）;</li>\n<li>修改字段名和字段类型： <code>ALTER TABLE</code>  表名 <code>CHANGE</code>  旧字段名 新字段名 类型（长度） <code>【COMMENT注释】``【约束】</code> ;</li>\n<li>删除字段： <code>ALTER TABLE</code>  表名 <code>DROP</code>  字段名；</li>\n<li>修改表名： <code>ALTER TABLE</code>  表名  <code>RENAME TO</code>  新表名；</li>\n<li>删除表： <code>DROP TABLE【IF EXISTS】</code> 表名；</li>\n<li>删除指定表，并重新创建该表： <code>TRUNCATE TABLE</code>  表名；</li>\n</ol>\n<h1 id=\"dml-介绍\"><a class=\"markdownIt-Anchor\" href=\"#dml-介绍\">#</a> DML - 介绍</h1>\n<blockquote>\n<p>DML 英文全称是 Data Manipulation Language (数据操作语言)，用来对数据库中的数据记录进行增删改操作。</p>\n</blockquote>\n<p><strong>DML - 添加数据：</strong></p>\n<ol>\n<li>给制定字段添加数据：<br>\n <code>INSERT INTO</code>  表名 (字段名 1，字段名 2，…)  <code>VALUES</code> （值 1，值 2，…）；</li>\n<li>给全部字段添加数据：<br>\n <code>INSERT INTO</code>  表名 <code>VALUES</code> （值 1，值 2，…）；</li>\n<li>批量添加数据：<br>\n <code>INSERT INTO</code>  表名（字段名 1，字段名 2，…） <code>VALUES</code> （值 1，值 2，…），（值 1，值 2，…）；<br>\n <code>INSERT INTO</code>  表名（值 1，值 2，…），（值 1，值 2，…），（值 1，值 2，…）；</li>\n<li>DML - 修改数据：<br>\n <code>UPDATE</code>  表名  <code>SET</code>   <code>字段名1 = 值1</code> ， <code>字段名2 = 值2</code> ，…【WHERE 条件】；</li>\n<li>DML - 删除数据：<br>\n <code>DELETE FROM</code>  表名【WHERE 条件】</li>\n</ol>\n<h1 id=\"dql-介绍\"><a class=\"markdownIt-Anchor\" href=\"#dql-介绍\">#</a> DQL - 介绍</h1>\n<blockquote>\n<p>DQL 英文全称是 Data Query Language (数据查询语言)，数据查询语言，用于查询数据库中表的记录。查询关键字：SELECT<br>\n<strong>DQL - 基本查询：</strong></p>\n</blockquote>\n<ol>\n<li>查询多个字段：<br>\n <code>SELECT</code>  字段，字段 2，字段 3 …  <code>FROM</code>  表名；<br>\n <code>SELECT</code>  *  <code>FROM</code>  表名；</li>\n<li>设置别名：<br>\n <code>SELECT</code>  字段 1【 <code>AS</code>  别名】，字段 2【 <code>AS</code>  别名】 …  <code>FROM</code>  表名；</li>\n<li>去除重复记录：<br>\n <code>SELECT DISTINCT</code>  字段列表  <code>FROM</code>  表名；</li>\n<li>DQL - 条件查询\n<ul>\n<li>语法：<br>\n <code>SELECT</code>  字段列表  <code>FROM</code>  表名  <code>WHERE</code>  条件列表；</li>\n<li>条件：<br>\n比较运算符:</li>\n</ul>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">比较运算符</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>&gt;</code></td>\n<td style=\"text-align:center\">大于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;=</code></td>\n<td style=\"text-align:center\">大于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>=</code></td>\n<td style=\"text-align:center\">等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;&gt;</code>  或 <code>!=</code></td>\n<td style=\"text-align:center\">不等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>BETWEEN…AND</code></td>\n<td style=\"text-align:center\">在某个范围之内（含最小、最大值）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>IN（…）</code></td>\n<td style=\"text-align:center\">在 IN 之后的列表中的值，多选一</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>LIKE</code>  占位符</td>\n<td style=\"text-align:center\">模糊匹配（… 匹配单个字符，% 匹配热议字符）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>IS NULL</code></td>\n<td style=\"text-align:center\">是 NULL</td>\n</tr>\n</tbody>\n</table>\n<p>逻辑运算符:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">逻辑运算符</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>AND</code>  或 <code>&amp;&amp;</code></td>\n<td style=\"text-align:center\">并且（多个条件同时成立）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>OR</code>  或 <code>||</code></td>\n<td style=\"text-align:center\">或者（多个条件任意一个成立）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>NOT</code>  或！</td>\n<td style=\"text-align:center\">非，不是</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"5\">\n<li>DQL- 聚合函数</li>\n</ol>\n<ul>\n<li>介绍：将一列数据作为一个整体，进行纵向计算。</li>\n<li>常见聚合函数：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>COUNT</code></td>\n<td style=\"text-align:center\">统计数量</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MAX</code></td>\n<td style=\"text-align:center\">最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MIN</code></td>\n<td style=\"text-align:center\">最下值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>AVG</code></td>\n<td style=\"text-align:center\">平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SUM</code></td>\n<td style=\"text-align:center\">求和</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>语法：<br>\n <code>SELECT</code>  聚合函数（字段列表） <code>FROM</code>  表名；</li>\n</ul>\n<ol start=\"6\">\n<li>DQL - 分组查询</li>\n</ol>\n<ul>\n<li>语法<br>\n <code> SELECT</code>  字段列表  <code>FROM</code>  表名【WHERE 条件】 <code>GROUP BY</code>  分组字段名【HAVING 分组后过滤条件】；</li>\n<li><code>where</code>  与 <code>having</code>  区别:\n<ul>\n<li><strong>执行时机不同：</strong> where 是分组之前进行过滤，不满足 where 条件，不参与分组；而 having 是分组之后对结果进行过滤；</li>\n<li><strong>判断条件不同：</strong> where 不能对聚类函数进行判断，而 having 可以。<br>\n<strong>【注意】</strong><br>\n执行顺序：where &gt; 聚合函数 &gt; having<br>\n 分组之后，查询的字段一般为聚合函数和分组字段，那其他字段无任何意义</li>\n</ul>\n</li>\n</ul>\n<ol start=\"7\">\n<li>DQL - 排序查询</li>\n</ol>\n<ul>\n<li>语法\n<ul>\n<li><code>SELECT</code>  字段列表  <code>FROM</code>  表名  <code>ORDER BY</code>  字段 1 排序方式 1，字段 2 排序方式 2；</li>\n</ul>\n</li>\n<li>排序方式\n<ul>\n<li><code>ASC</code>  (ascend)：升序（默认）</li>\n<li><code>DESC</code>  (descend)：降序</li>\n</ul>\n</li>\n</ul>\n<p><strong>【注意】</strong> 如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序。</p>\n<ol start=\"8\">\n<li>DQL - 分页查询\n<ul>\n<li><code>LIMIT</code>  控制查询的起始位置和条目数:</li>\n<li><code>OFFSET</code>  指定起始索引， <code>LIMIT</code>  指定查询条目数：<br>\n <code>SELECT</code>  字段列表  <code>FROM</code>  表名  <code>LIMIT</code>  查询条目数  <code>OFFSET</code>  起始索引；</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p><strong>【注意】</strong></p>\n<ul>\n<li>起始索引从 0 开始，起始索引 = （查询页数 - 1）* 每页显示记录数</li>\n<li>分页查询是数据库的方言，不同的数据库有不同的实现， <code>MYSQL</code>  中是 <code>LIMIT</code></li>\n<li>如果查询的是第一页数据，起始索引可以省略，直接简写为 <code>limit 10</code></li>\n<li>如果查询无结果，会返回空的结果集，不会报错。</li>\n</ul>\n</blockquote>\n<h1 id=\"dcl-介绍\"><a class=\"markdownIt-Anchor\" href=\"#dcl-介绍\">#</a> DCL - 介绍</h1>\n<blockquote>\n<p>DCL 英文全称 Data Control Language (数据控制语言)，用来管理数据库用户、控制数据库的访问权限。</p>\n</blockquote>\n<ol>\n<li>DCL - 管理用户</li>\n</ol>\n<ul>\n<li>查询用户：<br>\n <code>USE</code>  mysql;<br>\n <code>SELECT</code>  *  <code>FROM</code>  user;</li>\n<li>创建用户<br>\n <code>CREATE USER</code>  ‘用户名’@‘主机名’  <code>IDENTIFIED BY</code>  ‘密码’；</li>\n<li>修改用户密码<br>\n <code>ALTER USER</code>  ‘用户名’@‘主机名’ <code>IDENTIFIED WITH</code>  mysql_native_password  <code>BY</code> ‘新密码’；</li>\n<li>删除用户<br>\n <code>DROP USER</code>  ‘用户名’@‘主机名’；<br>\n<strong>【注意】</strong></li>\n<li>主机名可以使用 % 通配，示例： <code>'root'@'localhost'</code>  表示只能在本地登录； <code>'root'@'%'</code>  表示可以在任意主机登录</li>\n<li>这类 SQL 开发人员操作的比较少，主要是 DBA（Database Administrator 数据库管理员）使用。</li>\n</ul>\n<ol start=\"2\">\n<li>DCL - 权限控制<br>\n MySQL 中定义了很多种权限，但是常用的就一下几种:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">权限</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>ALL</code>  、 <code>ALL PRIVILEGES</code></td>\n<td style=\"text-align:center\">所有权限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SELECT</code></td>\n<td style=\"text-align:center\">查询数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>INSERT</code></td>\n<td style=\"text-align:center\">插入数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>UPDATE</code></td>\n<td style=\"text-align:center\">修改数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DELETE</code></td>\n<td style=\"text-align:center\">删除数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ALTER</code></td>\n<td style=\"text-align:center\">修改表</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DROP</code></td>\n<td style=\"text-align:center\">删除数据库 / 表 / 视图</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>CREATE</code></td>\n<td style=\"text-align:center\">创建数据库 / 表</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>查询权限<br>\n <code>SHOW</code>   <code>GRANTS</code>   <code>FOR</code>  ‘用户名’@‘主机名’；</li>\n<li>授予权限<br>\n <code>GRANT</code>  权限列表  <code>ON</code>  数据库名 表名  <code>TO</code>  ‘用户名’@‘主机名’；</li>\n<li>撤销权限<br>\n <code>REVOKE</code>  权限列表  <code>ON</code>  数据库名 表名  <code>FROM</code>  ‘用户名’@‘主机名’；</li>\n</ul>\n<p><strong>表插入数据：</strong></p>\n<ul>\n<li>给指定字段添加数据：<br>\n <code>INSERT INTO</code>  表名 (字段名 1，字段名 2，…)  <code>VALUES</code> （值 1，值 2，…）；</li>\n<li>给全部字段添加数据：<br>\n <code>INSERT INTO</code>  表名 <code>VALUES</code> （值 1，值 2，…）；</li>\n<li>批量添加数据：<br>\n <code>INSERT INTO</code>  表名（字段名 1，字段名 2，…） <code>VALUES</code> （值 1，值 2，…），（值 1，值 2，…）；<br>\n <code>INSERT INTO</code>  表名（值 1，值 2，…），（值 1，值 2，…），（值 1，值 2，…）；<br>\n<strong>表修改数据：</strong><br>\n <code>UPDATE</code>  表名  <code>SET</code>   <code>字段名1 = 值1</code> ， <code>字段名2 = 值2</code> ，…【WHERE 条件】；<br>\n<strong>表删除数据：</strong><br>\n <code>DELETE FROM</code>  表名【WHERE 条件】</li>\n</ul>\n<blockquote>\n<p><strong>【注意】</strong></p>\n<ul>\n<li>多个权限之间，使用逗号分隔</li>\n<li>授权书，数据库名和表名可以使用 * 进行通配，代表所有。</li>\n</ul>\n</blockquote>\n<p><strong>【函数】</strong><br>\n一段可以直接被另一程序调用的程序或代码<br>\n字符串函数：MySQL 中内置了很多字符串函数，常用的几个如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>CONCAT（S1,S2,..Sn）</code></td>\n<td style=\"text-align:center\">字符串拼接，将 S1,S2,…Sn 拼接成一个字符穿</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>LOWER（str）</code></td>\n<td style=\"text-align:center\">将字符串 str 全部转为小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>UPPER（str）</code></td>\n<td style=\"text-align:center\">将字符串 str 全部转为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>LPAD（str,n,pad）</code></td>\n<td style=\"text-align:center\">左填充，用字符串 pad 对 str 的左边进行填充，达到 n 个字符串长度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>RPAD（str，n，pad）</code></td>\n<td style=\"text-align:center\">右填充，用字符串 pad 对 str 的右边进行填充，达到 n 个字符串长度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TRIM（str）</code></td>\n<td style=\"text-align:center\">去掉字符串头部和尾部的空格</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SUBSTRING(str,start,len)</code></td>\n<td style=\"text-align:center\">返回从字符串 str 从 start 位置的 len 个长度的字符串</td>\n</tr>\n</tbody>\n</table>\n<p><strong>数值函数：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>CEIL(X)</code></td>\n<td style=\"text-align:center\">向上取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>FLOOR(X)</code></td>\n<td style=\"text-align:center\">向下取整</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MOD(x,y)</code></td>\n<td style=\"text-align:center\">返回 x/y 的模</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>RAND()</code></td>\n<td style=\"text-align:center\">返回 0~1 内的随机数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ROUND(X,Y)</code></td>\n<td style=\"text-align:center\">求参数 x 的四舍五入的值，保留 y 位小数</td>\n</tr>\n</tbody>\n</table>\n<p><strong>日期函数：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>CURDATE()</code></td>\n<td style=\"text-align:center\">返回当前日期</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>CURTIME()</code></td>\n<td style=\"text-align:center\">返回当前时间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>NOW()</code></td>\n<td style=\"text-align:center\">返回当前日期和时间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>YEAR(date)</code></td>\n<td style=\"text-align:center\">获取制定 date 的年份</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MONTH(date)</code></td>\n<td style=\"text-align:center\">获取指定 date 的月份</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DAY（date）</code></td>\n<td style=\"text-align:center\">获取指定 date 的日期</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DATE_ADD(date, INTERVAL expr type)</code></td>\n<td style=\"text-align:center\">返回日期 / 时间值加时间间隔 expr 后的时间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DATEDIFF(date1,date2)</code></td>\n<td style=\"text-align:center\">返回起始时间 date1 和结束 date2 之间天数</td>\n</tr>\n</tbody>\n</table>\n<p><strong>流程函数：</strong><br>\n流程函数也是很常用的一类函数，可以在 SQL 语句中实现条件筛选，从而提高语句的效率。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>IF(value,t,f)</code></td>\n<td style=\"text-align:center\">如果 value 为 true, 则返回 t，否则返回 f</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>IFNULL（value1,value2）</code></td>\n<td style=\"text-align:center\">如果 value1 不为空，返回 value1，否则返回 value2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>CASE</code>   <code>WHEN</code> 【val1】 <code>THEN</code> 【res1】… <code>ELSE</code> 【dafault】 <code>END</code></td>\n<td style=\"text-align:center\">如果 val1 为 true, 返回 res1,… 否则返回 default 默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>CASE</code> 【expr】 <code>WHEN</code> 【val1】 <code>THEN</code> 【res1】… <code>ELSE</code> 【default】 <code>END</code></td>\n<td style=\"text-align:center\">如果 expr 的值等于 val1, 返回 res1,… 否则返回 default 默认值</td>\n</tr>\n</tbody>\n</table>\n<p><strong>约束</strong></p>\n<ul>\n<li>概念：约束是作用于表中字段上的规则，用于限制存储在表中的数据</li>\n<li>目的：保证数据库中数据的正确、有效性和完整性<br>\n<strong>分类：</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">约束</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">非空约束</td>\n<td style=\"text-align:center\">限制该字段的数据不能为 NULL</td>\n<td style=\"text-align:center\">NOT NULL</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">唯一约束</td>\n<td style=\"text-align:center\">保证该字段的所有数据都是唯一、不重复的</td>\n<td style=\"text-align:center\">UNIQUE</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">主键约束</td>\n<td style=\"text-align:center\">主键是一行数据的唯一标识、要求非空且唯一</td>\n<td style=\"text-align:center\">PRIMARY</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认约束</td>\n<td style=\"text-align:center\">保存数据时，如果未指定该字段的值，则采用默认值</td>\n<td style=\"text-align:center\">DEFCK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">检查约束（8.0.16 版本之后）</td>\n<td style=\"text-align:center\">保证字段满足某一个条件</td>\n<td style=\"text-align:center\">CHECK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">外键约束</td>\n<td style=\"text-align:center\">用来让两张表的数据之间建立连接，保证数据的一致性和完整性</td>\n<td style=\"text-align:center\">FOREIGN KEY</td>\n</tr>\n</tbody>\n</table>\n<p><strong>【注意】：约束是作用于表中字段上的，可以在创建表 / 修改表的时候添加约束。</strong><br>\n<strong>外键约束</strong></p>\n<ul>\n<li>概念：外键用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性。</li>\n<li>语法：\n<ul>\n<li>添加外键：</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名（</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t字段名 数据类型，</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t…</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t【<span class=\"token keyword\">CONSTRAINT</span>】【外键名称】<span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> （外键字段名） <span class=\"token keyword\">REFERENCES</span> 主表（主表列名）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t）；</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名称 <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> （外键字段名） <span class=\"token keyword\">REFERENCES</span> 主表（主表列名）；</pre></td></tr></table></figure><ul>\n<li>删除外键：<br>\n <code>ALTER TABLE</code>  表名  <code>DROP</code>   <code>FPREIGN</code>   <code>KEY</code>  外键名称；</li>\n<li>删除 / 更新行为：</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">行为</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>NO ACTION</code></td>\n<td style=\"text-align:center\">当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新。（与 RESTRICT 一致）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>RESTRICT</code></td>\n<td style=\"text-align:center\">当父表中删除 / 更新记录时，首先检查记录是否有对应外键，如果有则不允许删除 / 更新。（与 NO ACTION 一致）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>CASCADE</code></td>\n<td style=\"text-align:center\">当父表中删除 / 更新记录时，首先检查记录是否有对应外键，如果有，则也删除 / 更新外键在子表中的记录。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SET NULL</code></td>\n<td style=\"text-align:center\">当父表中删除 / 更新记录时，首先检查记录是否有对应外键，如果有则设置子表中该外键值为 NULL（这就要求该外键允许取 NULL）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SET DEFAULT</code></td>\n<td style=\"text-align:center\">父表有变更时，子表将外键列设置成一个默认的值（lnnodb 不支持）</td>\n</tr>\n</tbody>\n</table>\n<p><code>ALTER TABLE</code>  表名  <code>ADD CONSTRAINT</code>  外键名称  <code>FOREIGN KEY</code>  (外键字段)  <code>REFERENCES</code>  主表名</p>\n<h1 id=\"多表查询\"><a class=\"markdownIt-Anchor\" href=\"#多表查询\">#</a> 多表查询</h1>\n<p><strong>多表关系</strong><br>\n项目开发中，在进行数据库表格结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本分为三种： 一对多（多对一）、多对多、一对一。</p>\n<ol>\n<li>一对多（多对一）：<br>\n案例：部门与员工的关系<br>\n关系：一个部门对应多个员工，一个员工对应一个部门<br>\n实现：在多的一方（员工表）建立外键，指向一的一方（部门表）的主键</li>\n<li>多对多：<br>\n案例：学生与课程的关系<br>\n关系：一个学生可以选修对门课程，一门课程也可以供多个学生选择<br>\n实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</li>\n<li>一对一：<br>\n案例：用户与用户详情的关系<br>\n关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提高操作效率。<br>\n实现：在任意一方加入外键，关联另一方的主键，并且设置外键为唯一的（UNIQUE）<br>\n<strong>多表查询概述：</strong><br>\n概述：指从多张表中查询数据。<br>\n笛卡尔积：笛卡尔乘积是指在数学中，两个集合 A 集合和 B 集合的所有组合情况。（在多表查询时，需要消除无效的笛卡尔积）。<br>\n<strong>多表查询分类：</strong></li>\n<li>连接查询：\n<ul>\n<li>内连接：相当于查询 A、B 交集部分数据</li>\n<li>外连接：\n<ul>\n<li>左外连接：查询左表所有数据，以及两张表交集部分数据</li>\n<li>右外连接：查询右表所有数据，以及两张表交集部分数据</li>\n</ul>\n</li>\n<li>自连接：当前表与自身的连接查询，自连接必须使用表别名</li>\n</ul>\n</li>\n<li>子查询：\n<ul>\n<li>连接查询 - 内连接（查询两表交集的部分）</li>\n</ul>\n</li>\n<li>内连接查询语法： <code>（A inner join B：AB两表值都存在）</code>\n<ul>\n<li>隐式内连接：\n<ul>\n<li>SELECT 字段列表 FROM 表 1，表 2 WHERE 条件…；</li>\n</ul>\n</li>\n<li>显示内连接：\n<ul>\n<li>SELECT 字段列表 FROM 表 1【INNER】JOIN 表 2 ON 连接条件…;</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>连接查询 - 外连接： <code>（A 【outer】 join B：AB两表值可能存在null的情况）</code> <br>\n <code>A inner join B：</code> 取交集<br>\n <code>A left join B：</code> 取 A 全部，B 没有对应的值，则为 null<br>\n <code>A right join B：</code> 取 B 全部，A 没有对应的值，则为 null<br>\n <code>A full outer join B：</code> 取并集，彼此没有对应的值为 null</li>\n</ol>\n<ul>\n<li>外连接查询语法：\n<ul>\n<li>左外连接：\n<ul>\n<li><code>SELECT</code>  字段列表  <code>FROM</code>  表 1  <code>LEFT【OUTER】JOIN</code>  表 2  <code>ON</code>  条件…；</li>\n</ul>\n</li>\n<li>右外连接：\n<ul>\n<li>SELECT 字段列表 FROM 表 1  <code>RIGHT【OUTER】JOIN</code>  表 2  <code>ON</code>  条件…；</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>连接查询 - 自连接：</li>\n</ol>\n<ul>\n<li>自连接查询语法：\n<ul>\n<li><code>SELECT</code>  字段列表  <code>FROM</code>  表 A 别名 A  <code>JOIN </code> 表 A 别名 B  <code>ON</code>  条件…；</li>\n</ul>\n</li>\n<li>自连接查询，可以是内连接查询，也可以是外连接查询。</li>\n</ul>\n<ol>\n<li>联合查询 - union,union all</li>\n</ol>\n<ul>\n<li>对于 union 查询，就是把多次查询结果联合起来，形成一个新的查询结果集</li>\n</ul>\n<h1 id=\"窗口函数\"><a class=\"markdownIt-Anchor\" href=\"#窗口函数\">#</a> 窗口函数</h1>\n<p>窗口函数又称为 OLAP 函数（Online Anallytical Processing，联机分析处理），可以对查询结果集中的每一行进行计算，并返回一个结果。窗口函数的返回值不依赖与查询中的其他行，只需要基于当前行通过 OVER 子句指定分析窗口即可。</p>\n<p><strong>窗口函数语法：</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>窗口函数<span class=\"token operator\">></span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>用于分组的类名:列<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 列<span class=\"token number\">2.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">></span> <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>用于排序的列名<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中：</p>\n<ul>\n<li><code>PARTITION BY</code> ：指定分组列，即先按照某个字段进行分组。</li>\n<li><code>ORDER BY</code> ：指定排序的列，先按照某个字段进行排序。</li>\n<li><code>&lt;窗口函数&gt;</code> ：要使用的聚合函数或者专门的窗口函数。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>RANK() OVER()</code></td>\n<td style=\"text-align:center\">排名，相同排名会占用名次，名次不连续</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>DENSE_RANK() OVER()</code></td>\n<td style=\"text-align:center\">排名，相同排名会占用名次，名次连续</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ROW_NUMBER() OVER()</code></td>\n<td style=\"text-align:center\">排名，相同排名也会占用名次，名次不连续</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>FIRST_VALUE() OVER()</code></td>\n<td style=\"text-align:center\">取分组内排序后，截止到当前行，第一个值</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"子查询\"><a class=\"markdownIt-Anchor\" href=\"#子查询\">#</a> 子查询</h1>\n<p>子查询是指嵌入在其他 SQL 语句中的 SELECT 语句，也叫嵌套查询。子查询可以嵌套在 SQL 语句中的 <code>WHERE</code> 、 <code>SELECT</code> 、 <code>FROM</code>  或 <code>HAVING</code>  子句中。<br>\n<strong>子查询语句分类：</strong></p>\n<ul>\n<li>单行子查询：子查询结果为单行单列，操作符有： <code>=</code> 、 <code>&lt;&gt;</code> 、 <code>&lt;</code> 、 <code>&lt;=</code> 、 <code>&gt;</code> 、 <code>&gt;=</code> 。</li>\n<li>多行子查询：子查询结果为多行单列或多行多列，操作符有： <code>IN</code> 、 <code>ANY</code> 、 <code>ALL</code> 。</li>\n</ul>\n",
            "tags": [
                "SQL"
            ]
        }
    ]
}