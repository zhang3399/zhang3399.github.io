{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodeVortex记事本 • All posts by \"大模型\" category",
    "description": "滴答滴答滴答",
    "home_page_url": "https://zhang3399.github.io",
    "items": [
        {
            "id": "https://zhang3399.github.io/2025/06/01/%E5%A4%A7%E6%A8%A1%E5%9E%8B/2025-6-1-%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83LoRA/",
            "url": "https://zhang3399.github.io/2025/06/01/%E5%A4%A7%E6%A8%A1%E5%9E%8B/2025-6-1-%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83LoRA/",
            "title": "大模型微调LoRA",
            "date_published": "2025-06-01T02:00:00.000Z",
            "content_html": "<blockquote>\n<p>LoRA 最早是由 Meta AI 在 2023 年 5 月 23 日在论文 &lt;&lt;LoRA: Low-Rank Adaptation of Large Language Models&gt;&gt; 中提出的，是一种用于微调大型语言模型的方法。LoRA 通过将模型的一部分参数分解为低秩矩阵，从而在微调时减少计算量和存储需求，同时保持模型的性能。</p>\n</blockquote>\n<p>解决了什么问题❔<br>\n✅大模型微调时计算量过大<br>\n✅大模型微调时存储需求过大</p>\n<p>优点👍</p>\n<table>\n<thead>\n<tr>\n<th>优点</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>避免灾难性遗忘</td>\n<td>直接修改大模型的参数会导致灾难性遗忘，LoRA 通过冻结大模型参数，保留原模型的能力</td>\n</tr>\n<tr>\n<td>快速切换</td>\n<td>任务切换只需要加载不同的 LoRA 参数即可，不需要重新训练模型</td>\n</tr>\n<tr>\n<td>存储效率高</td>\n<td>一个大模型可搭配多个 LoRA，只需要存储 LoRA 参数，不需要存储大模型参数</td>\n</tr>\n<tr>\n<td>兼容性强</td>\n<td>原始模型完全不动，多个团队可以共享同一个基础模型，只开发自己负责的 LoRA 模块</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"lora原理\"><a class=\"markdownIt-Anchor\" href=\"#lora原理\">#</a> LoRA 原理</h1>\n<p><code>LoRA</code>  的核心思想是将模型的一部分参数分解为低秩矩阵，从而在微调时减少计算量和存储需求。具体来说， <code>LoRA</code>  将模型的一部分参数分解为两个低秩矩阵，然后将这两个矩阵相乘得到微调后的参数。这样，在微调时只需要对这两个低秩矩阵进行更新，而不需要对整个模型进行更新，从而大大减少了计算量和存储需求。<br>\n示例：<br>\n模型原始参数矩阵为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>，将其分解为两个低秩矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mi>U</mi><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">A = UV</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>。在微调时，只需要更新 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>，而不需要更新整个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>。<br>\n变换公式如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>微调后的参数矩阵</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mtext>原始参数矩阵</mtext><mo>+</mo><mtext>微调参数矩阵A</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>微调参数矩阵A</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mtext>低秩矩阵U</mtext><mo>×</mo><mtext>低秩矩阵V</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n\\text{微调后的参数矩阵} &amp; = \\text{原始参数矩阵} + \\text{微调参数矩阵A}\\\\\n\\text{微调参数矩阵A} &amp; = \\text{低秩矩阵U} \\times \\text{低秩矩阵V}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord cjk_fallback\">微调后的参数矩阵</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord cjk_fallback\">微调参数矩阵</span><span class=\"mord\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">原始参数矩阵</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">微调参数矩阵</span><span class=\"mord\">A</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">低秩矩阵</span><span class=\"mord\">U</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">低秩矩阵</span><span class=\"mord\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h1 id=\"llamacpp下载与编译\"><a class=\"markdownIt-Anchor\" href=\"#llamacpp下载与编译\">#</a> llama.cpp 下载与编译</h1>\n<p>llama.cpp 可以帮助我们转化模型 lora 微调模型为 gguf 格式，便于后续 ollama 部署。</p>\n<ol>\n<li>llama.cpp 下载</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/ggerganov/llama.cpp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> llama.cpp</pre></td></tr></table></figure><ol start=\"2\">\n<li>llama.cpp 编译环境<br>\n创建 anaconda 虚拟环境，并安装相关依赖</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create <span class=\"token parameter variable\">-n</span> llama <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda activate llama</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> llama.cpp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-e</span> <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>llama.cpp 编译</li>\n</ol>\n<p><strong>Linux 环境下编译：</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#直接进入工程目录 make 即可</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#CUDA 加速版编译</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token assign-left variable\">GGML_CUDA</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p><strong>windows 环境下编译：</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Windows 平台需要安装 cmake 和 gcc，如果有没有安装的请自行百度安装</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cmake <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cmake <span class=\"token parameter variable\">--build</span> <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">--config</span> Release</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#CUDA 加速版编译</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cmake <span class=\"token punctuation\">..</span> <span class=\"token parameter variable\">-DLLAMA_CUBLAS</span><span class=\"token operator\">=</span>ON</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>cmake <span class=\"token parameter variable\">--build</span> <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">--config</span> Release</pre></td></tr></table></figure><h1 id=\"lora微调\"><a class=\"markdownIt-Anchor\" href=\"#lora微调\">#</a> LoRA 微调</h1>\n<h2 id=\"1-准备数据集\"><a class=\"markdownIt-Anchor\" href=\"#1-准备数据集\">#</a> 1. 准备数据集</h2>\n<p>数据集格式为 jsonl，每行一个 json，包含以下字段：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"prompt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"response\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxx\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"2-准备lora参数\"><a class=\"markdownIt-Anchor\" href=\"#2-准备lora参数\">#</a> 2. 准备 LoRA 参数</h2>\n<p>使用 <code>llama.cpp</code>  中的 <code>tools/finetune.py</code>  脚本，将原始模型参数转换为 LoRA 参数。</p>\n<style>\ntable {\n  width: 100%; \n  background-color:rgba(27, 112, 138,0.2);\n  border-collapse: collapse; /* 合并边框 */\n}\nth, td {\n  border: 1px solid #ddd; /* 浅灰色边框 */\n  padding: 10px;          /* 增加内边距 */\n  text-align: left;       /* 统一左对齐 */\n}\nth {\n  background-color: #f2f2f2; /* 表头浅灰色背景 */\n  font-weight: bold;         /* 加粗标题 */\n}\ntr:nth-child(even) {\n  background-color: #f9f9f9; /* 隔行浅色背景 */\n}\n</style>",
            "tags": [
                "LoRA"
            ]
        }
    ]
}